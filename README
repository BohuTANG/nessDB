================================================================
nessDB v2.0 with Small-Splittable Tree (one of Bε-tree)
Copyright (C) 2012-2013 BohuTANG________________ 
_____________________________  __ \__  __ )
__  __ \  _ \_  ___/_  ___/_  / / /_  __  |
_  / / /  __/(__  )_(__  )_  /_/ /_  /_/ / 
/_/ /_/\___//____/ /____/ /_____/ /_____/  
================================================================

  nessDB is a fast Key-Value database(embedded), which is written in ANSI C with GPL LICENSE and works in most POSIX systems without external dependencies.

  From Version 2.0, nessDB uses Small-Splittable Tree (SST), it's one of Bε-tree(ε=1/2) and Cache-oblivious write-optimized structure, for more details, please refer to documentations which in 'spec' folder.
  
  V2.0 FEATURES
  =============
  a. Better performances on Random-Read/Write
  b. Using Small-Splittable Tree as storage engine
  c. Using fractional cascading to speed up search
  d. Cache-oblivious write-optimized structure

  HOW TODO BENCHMARK
  ==================
  $make db-bench
  $./db-bench <write | read > <count> 
	or 
  $./db-bench readone <key>

  If you want delete all indexes/db/logs, you should do:
  $make cleandb

  HOW TO USE AS DB ENGINE
  =======================
  a. OPEN
		struct nessdb *db = db_open(db-path); 

  b. ADD
  		struct slice sk, sv;
		sk.len = 3;
		sk.data = "key";
		sv.len = 5;
		sv.data = "value";
		db_add(db, &sk, &sv);

  c. DELETE
  		struct slice sk;
		sk.len = 3;
		sk.data = "key";
		db_remove(db, &sk);

  d. READ
  		struct slice sk, sv;
		sk.len = 3;
		sk.data = "key";
		int ret = db_get(db, &sk, &sv);
		if (ret == 1) {
			printf("data is %s", sv.data);
			db_free_data(sv.data);
		} else
			print("Not found");

  e. SCAN
		struct slice s1, s2;
		struct iter *it;

		s1.len = strlen(start);
		s1.data = start;
		s2.len = strlen(end);
		s2.data = end;

		it = db_scan(db, &s1, &s2, limit);

		__DEBUG("---scan count:%d", it->c);
		for(; it->valid; db_iter_next(it)) {
			__DEBUG("\t---[%s]:[%s]", it->key->data, it->value->data);
		}


  f. CLOSE
  		db_close(db);

  NOTICE:
  From version 2.0, the copyright from BSD change to GPL!

  Thanks for your attention!

  				--BohuTANG--
